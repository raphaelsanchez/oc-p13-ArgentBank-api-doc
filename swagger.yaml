swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /transactions/monthly:
    get:
      security:
        - Bearer: []
      tags:
        - "Transactions"
      summary: "View transactions grouped by account"
      description: "Returns all transactions for the current month, grouped by account for the authenticated user."
      parameters:
        - name: "month"
          in: "query"
          description: "Month for which to retrieve transactions (`YYYY-MM` format)."
          required: false
          type: "string"
        - name: "accountId"
          in: "query"
          description: "Account ID to filter transactions by specific account."
          required: false
          type: "string"
        - name: "Authorization"
          in: "header"
          description: "JWT token for authentication."
          required: true
          type: "string"
      responses:
        200:
          description: "List of transactions for the current month."
          schema:
            type: "object"
            properties:
              transactions:
                type: "object"
                additionalProperties:
                  type: "array"
                  items:
                    $ref: "#/definitions/Transaction"
          examples:
            application/json:
              transactions:
                checking_account:
                  - id: 1
                    date: "2024-05-01"
                    amount: -45.50
                    category: "Shopping"
                    type: "Electronic"
                    description: "Purchase at XYZ Supermarket"
                    note: "Purchase note"
                  - id: 2
                    date: "2024-05-03"
                    amount: -15.00
                    category: "Transport"
                    type: "Electronic"
                    description: "Transport card recharge"
                    note: "Note of the purchase"
                savings_account:
                  - id: 3
                    date: "2024-05-02"
                    amount: 1500.00
                    category: "Salary"
                    type: "Electronic"
                    description: "Monthly pay"
                    note: "Monthly pay note"
        401:
          description: "Missing or invalid JWT token."
        404:
          description: "No transactions found for the specified month and/or account."
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Transaction:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      date:
        type: "string"
        format: "date"
      amount:
        type: "number"
        format: "double"
      category:
        type: "string"
      type:
        type: "string"
      description:
        type: "string"
      note:
        type: "string"
      accountId:
        type: "string"
